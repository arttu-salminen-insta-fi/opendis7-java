/**
 * Copyright (c) 2008-2022, MOVES Institute, Naval Postgraduate School (NPS). All rights reserved.
 * This work is provided under a BSD-style open-source license, see project
 * <a href="https://savage.nps.edu/opendis7-java/license.html" target="_blank">license.html</a> and <a href="https://savage.nps.edu/opendis7-java/license.txt" target="_blank">license.txt</a>
 */
// header autogenerated using string template dis7javalicense.txt

// autogenerated using string template disenumpart1.txt

package edu.nps.moves.dis7.enumerations;

import java.nio.ByteBuffer;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;

import edu.nps.moves.dis7.pdus.*;

/**
 * This <code>enum</code> type is generated from XML,
 *  UID 76,
 * marshal size 8;
 * EmitterSystemFunction has 82 enumerations total.
 * @see <a href="https://docs.oracle.com/javase/tutorial/java/javaOO/enum.html">Java Tutorials: Enum Types</a>
 * @see java.lang.Enum
 */
public enum EmitterSystemFunction 
{
    // autogenerated using string template disenumfootnotecomment.txt

    /** Other */
    // autogenerated using string template disenumpart2.txt
    OTHER (0, "Other"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Multi-function */
    // autogenerated using string template disenumpart2.txt
    MULTI_FUNCTION (1, "Multi-function"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Early Warning/Surveillance */
    // autogenerated using string template disenumpart2.txt
    EARLY_WARNING_SURVEILLANCE (2, "Early Warning/Surveillance"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Height Finder */
    // autogenerated using string template disenumpart2.txt
    HEIGHT_FINDER (3, "Height Finder"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Fire Control */
    // autogenerated using string template disenumpart2.txt
    FIRE_CONTROL (4, "Fire Control"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Acquisition/Detection */
    // autogenerated using string template disenumpart2.txt
    ACQUISITION_DETECTION (5, "Acquisition/Detection"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Tracker */
    // autogenerated using string template disenumpart2.txt
    TRACKER (6, "Tracker"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Guidance/Illumination */
    // autogenerated using string template disenumpart2.txt
    GUIDANCE_ILLUMINATION (7, "Guidance/Illumination"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Firing point/launch point location */
    // autogenerated using string template disenumpart2.txt
    FIRING_POINT_LAUNCH_POINT_LOCATION (8, "Firing point/launch point location"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Range-Only */
    // autogenerated using string template disenumpart2.txt
    RANGE_ONLY (9, "Range-Only"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Radar Altimeter */
    // autogenerated using string template disenumpart2.txt
    RADAR_ALTIMETER (10, "Radar Altimeter"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Imaging */
    // autogenerated using string template disenumpart2.txt
    IMAGING (11, "Imaging"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Motion Detection */
    // autogenerated using string template disenumpart2.txt
    MOTION_DETECTION (12, "Motion Detection"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Navigation */
    // autogenerated using string template disenumpart2.txt
    NAVIGATION (13, "Navigation"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Weather / Meteorological */
    // autogenerated using string template disenumpart2.txt
    WEATHER_METEOROLOGICAL (14, "Weather / Meteorological"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Instrumentation */
    // autogenerated using string template disenumpart2.txt
    INSTRUMENTATION (15, "Instrumentation"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Identification/Classification (including IFF) */
    // autogenerated using string template disenumpart2.txt
    IDENTIFICATION_CLASSIFICATION_INCLUDING_IFF (16, "Identification/Classification (including IFF)"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** AAA (Anti-Aircraft Artillery) Fire Control */
    // autogenerated using string template disenumpart2.txt
    AAA_ANTI_AIRCRAFT_ARTILLERY_FIRE_CONTROL (17, "AAA (Anti-Aircraft Artillery) Fire Control"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Air Search/Bomb */
    // autogenerated using string template disenumpart2.txt
    AIR_SEARCH_BOMB (18, "Air Search/Bomb"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Air Intercept */
    // autogenerated using string template disenumpart2.txt
    AIR_INTERCEPT (19, "Air Intercept"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Altimeter */
    // autogenerated using string template disenumpart2.txt
    ALTIMETER (20, "Altimeter"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Air Mapping */
    // autogenerated using string template disenumpart2.txt
    AIR_MAPPING (21, "Air Mapping"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Air Traffic Control */
    // autogenerated using string template disenumpart2.txt
    AIR_TRAFFIC_CONTROL (22, "Air Traffic Control"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Beacon */
    // autogenerated using string template disenumpart2.txt
    BEACON (23, "Beacon"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Battlefield Surveillance */
    // autogenerated using string template disenumpart2.txt
    BATTLEFIELD_SURVEILLANCE (24, "Battlefield Surveillance"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Ground Control Approach */
    // autogenerated using string template disenumpart2.txt
    GROUND_CONTROL_APPROACH (25, "Ground Control Approach"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Ground Control Intercept */
    // autogenerated using string template disenumpart2.txt
    GROUND_CONTROL_INTERCEPT (26, "Ground Control Intercept"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Coastal Surveillance */
    // autogenerated using string template disenumpart2.txt
    COASTAL_SURVEILLANCE (27, "Coastal Surveillance"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Decoy/Mimic */
    // autogenerated using string template disenumpart2.txt
    IDENTIFICATION_FRIEND_OR_FOE (28, "Decoy/Mimic"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Data Transmission */
    // autogenerated using string template disenumpart2.txt
    DATA_TRANSMISSION (29, "Data Transmission"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Earth Surveillance */
    // autogenerated using string template disenumpart2.txt
    SUPPLEMENTAL_EMISSION_ENTITY_STATE (30, "Earth Surveillance"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Gun Lay Beacon */
    // autogenerated using string template disenumpart2.txt
    GUN_LAY_BEACON (31, "Gun Lay Beacon"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Ground Mapping */
    // autogenerated using string template disenumpart2.txt
    GROUND_MAPPING (32, "Ground Mapping"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Harbor Surveillance */
    // autogenerated using string template disenumpart2.txt
    HARBOR_SURVEILLANCE (33, "Harbor Surveillance"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** IFF (Identify Friend or Foe) */
    // autogenerated using string template disenumpart2.txt
    IFF_IDENTIFY_FRIEND_OR_FOE (34, "IFF (Identify Friend or Foe)"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** ILS (Instrument Landing System) */
    // autogenerated using string template disenumpart2.txt
    ILS_INSTRUMENT_LANDING_SYSTEM (35, "ILS (Instrument Landing System)"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Ionospheric Sound */
    // autogenerated using string template disenumpart2.txt
    IONOSPHERIC_SOUND (36, "Ionospheric Sound"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Interrogator */
    // autogenerated using string template disenumpart2.txt
    INTERROGATOR (37, "Interrogator"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Barrage Jamming */
    // autogenerated using string template disenumpart2.txt
    BARRAGE_JAMMING (38, "Barrage Jamming"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Click Jamming */
    // autogenerated using string template disenumpart2.txt
    CLICK_JAMMING (39, "Click Jamming"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Deceptive Jamming */
    // autogenerated using string template disenumpart2.txt
    DECEPTIVE_JAMMING (40, "Deceptive Jamming"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Frequency Swept Jamming */
    // autogenerated using string template disenumpart2.txt
    FREQUENCY_SWEPT_JAMMING (41, "Frequency Swept Jamming"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Jammer */
    // autogenerated using string template disenumpart2.txt
    JAMMER (42, "Jammer"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Noise Jamming */
    // autogenerated using string template disenumpart2.txt
    NOISE_JAMMING (43, "Noise Jamming"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Pulsed Jamming */
    // autogenerated using string template disenumpart2.txt
    PULSED_JAMMING (44, "Pulsed Jamming"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Repeater Jamming */
    // autogenerated using string template disenumpart2.txt
    REPEATER_JAMMING (45, "Repeater Jamming"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Spot Noise Jamming */
    // autogenerated using string template disenumpart2.txt
    TIME_SPACE_POSITION_INFORMATION (46, "Spot Noise Jamming"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Missile Acquisition */
    // autogenerated using string template disenumpart2.txt
    MISSILE_ACQUISITION (47, "Missile Acquisition"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Missile Downlink */
    // autogenerated using string template disenumpart2.txt
    MISSILE_DOWNLINK (48, "Missile Downlink"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Meteorological */
    // autogenerated using string template disenumpart2.txt
    LIVE_ENTITY_FIRE (49, "Meteorological"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Space */
    // autogenerated using string template disenumpart2.txt
    LIVE_ENTITY_DETONATION (50, "Space"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Surface Search */
    // autogenerated using string template disenumpart2.txt
    CREATE_ENTITY_RELIABLE (51, "Surface Search"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Shell Tracking */
    // autogenerated using string template disenumpart2.txt
    REMOVE_ENTITY_RELIABLE (52, "Shell Tracking"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Television */
    // autogenerated using string template disenumpart2.txt
    ACTION_REQUEST_RELIABLE (56, "Television"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Unknown */
    // autogenerated using string template disenumpart2.txt
    ACTION_RESPONSE_RELIABLE (57, "Unknown"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Video Remoting */
    // autogenerated using string template disenumpart2.txt
    DATA_QUERY_RELIABLE (58, "Video Remoting"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Experimental or Training */
    // autogenerated using string template disenumpart2.txt
    SET_DATA_RELIABLE (59, "Experimental or Training"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Missile Guidance */
    // autogenerated using string template disenumpart2.txt
    DATA_RELIABLE (60, "Missile Guidance"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Missile Homing */
    // autogenerated using string template disenumpart2.txt
    EVENT_REPORT_RELIABLE (61, "Missile Homing"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Missile Tracking */
    // autogenerated using string template disenumpart2.txt
    COMMENT_RELIABLE (62, "Missile Tracking"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Jamming, noise */
    // autogenerated using string template disenumpart2.txt
    SET_RECORD_RELIABLE (64, "Jamming, noise"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Jamming, deception */
    // autogenerated using string template disenumpart2.txt
    RECORD_QUERY_RELIABLE (65, "Jamming, deception"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Decoy */
    // autogenerated using string template disenumpart2.txt
    DECOY (66, "Decoy"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Navigation/Distance Measuring Equipment */
    // autogenerated using string template disenumpart2.txt
    NAVIGATION_DISTANCE_MEASURING_EQUIPMENT (71, "Navigation/Distance Measuring Equipment"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Terrain Following */
    // autogenerated using string template disenumpart2.txt
    TERRAIN_FOLLOWING (72, "Terrain Following"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Weather Avoidance */
    // autogenerated using string template disenumpart2.txt
    WEATHER_AVOIDANCE (73, "Weather Avoidance"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Proximity Fuse */
    // autogenerated using string template disenumpart2.txt
    PROXIMITY_FUSE (74, "Proximity Fuse"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Instrumentation */
    // autogenerated using string template disenumpart2.txt
    INSTRUMENTATION_2 (75, "Instrumentation"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Radiosonde */
    // autogenerated using string template disenumpart2.txt
    RADIOSONDE (76, "Radiosonde"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Sonobuoy */
    // autogenerated using string template disenumpart2.txt
    SONOBUOY (77, "Sonobuoy"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Bathythermal Sensor */
    // autogenerated using string template disenumpart2.txt
    BATHYTHERMAL_SENSOR (78, "Bathythermal Sensor"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Towed Counter Measure */
    // autogenerated using string template disenumpart2.txt
    TOWED_COUNTER_MEASURE (79, "Towed Counter Measure"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Dipping Sonar */
    // autogenerated using string template disenumpart2.txt
    DIPPING_SONAR (80, "Dipping Sonar"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Towed Acoustic Sensor */
    // autogenerated using string template disenumpart2.txt
    TOWED_ACOUSTIC_SENSOR (81, "Towed Acoustic Sensor"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Weapon, non-lethal */
    // autogenerated using string template disenumpart2.txt
    WEAPON_NON_LETHAL (96, "Weapon, non-lethal"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Weapon, lethal */
    // autogenerated using string template disenumpart2.txt
    WEAPON_LETHAL (97, "Weapon, lethal"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Test Equipment */
    // autogenerated using string template disenumpart2.txt
    TEST_EQUIPMENT (98, "Test Equipment"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Acquisition Track */
    // autogenerated using string template disenumpart2.txt
    ACQUISITION_TRACK (99, "Acquisition Track"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Track Guidance */
    // autogenerated using string template disenumpart2.txt
    TRACK_GUIDANCE (100, "Track Guidance"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Guidance Illumination Track Acquisition */
    // autogenerated using string template disenumpart2.txt
    GUIDANCE_ILLUMINATION_TRACK_ACQUISITION (101, "Guidance Illumination Track Acquisition"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Search Acquisition */
    // autogenerated using string template disenumpart2.txt
    SEARCH_ACQUISITION (102, "Search Acquisition"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Dropsonde */
    // autogenerated using string template disenumpart2.txt
    DROPSONDE (103, "Dropsonde");

    // autogenerated using string template disenumpart25.txt

    private int value;
    private final String description;

    /** Constructor */
    EmitterSystemFunction(int value, String description)
    {
        this.value = value;
        this.description = description;
    }
    /** Provide enumeration value
      * @return integer value */
    public int getValue()
    {
        return value;
    }

    /** Provide enumeration description
     * @return description
     */
    public String getDescription()
    {
        return description;
    }

    /** bit width for this enumeration
     * @return number of bits wide
     */
    public static int getEnumBitWidth()
    {
      return 8;
    }

    /** 
     * Provide enumeration for a given value
     * @param value integer value of interest
     * @return enumeration corresponding to numeric value
     */
    public static EmitterSystemFunction getEnumForValue(int value)
    {
       for (EmitterSystemFunction nextEnum : EmitterSystemFunction.values())
       {
          if (nextEnum.getValue() == value)
              return nextEnum;
       }
       System.out.flush(); // ensure contiguous console outputs
       System.err.println("No corresponding enumeration found for value " + value + " of enum EmitterSystemFunction");
       System.err.flush(); // ensure contiguous console outputs
       return null;
    }

    // autogenerated using string template disenumpart3_8.txt

    private boolean TRACE = false;

    /** Set tracing on/off for this object 
     * @param value whether tracing is on or off */
    public void setTRACE (boolean value)
    {
        TRACE = value;
    }

    /** Whether tracing is on or off for this object
     * @return whether tracing is on or off */
    public boolean getTRACE ()
    {
        return TRACE;
    }

    /** Marshal value to DataOutputStream
     * @see <a href="https://en.wikipedia.org/wiki/Marshalling_(computer_science)" target="_blank">https://en.wikipedia.org/wiki/Marshalling_(computer_science)</a>
     * @param dos DataOutputStream for output
     * @throws IOException input-output error */
    public void marshal(DataOutputStream dos) throws IOException
    {
        dos.writeByte(getValue());
    }
    
    /** Marshal value to ByteBuffer
     * @see <a href="https://en.wikipedia.org/wiki/Marshalling_(computer_science)" target="_blank">https://en.wikipedia.org/wiki/Marshalling_(computer_science)</a>
     * @param byteBuffer ByteBuffer for output
     * @throws IOException input-output error */
    public void marshal(ByteBuffer byteBuffer) throws Exception
    {
        byteBuffer.put((byte)getValue());
    }

    /** Unmarshal value to DataInputStream
     * @see <a href="https://en.wikipedia.org/wiki/Marshalling_(computer_science)" target="_blank">https://en.wikipedia.org/wiki/Marshalling_(computer_science)</a>
     * @param dis DataInputStream for input
     * @throws Exception unmarshalling input-output error
     * @return enumeration of interest */
    public static EmitterSystemFunction unmarshalEnum (DataInputStream dis) throws Exception
    {
       /* try {
            value = dis.readUnsignedByte();
        }
        catch(IOException ex) {
            showError(ex);
        } */
        
        return getEnumForValue(dis.readByte());
    } 

    /** Unmarshal enumeration value to ByteBuffer
     * @see <a href="https://en.wikipedia.org/wiki/Marshalling_(computer_science)" target="_blank">https://en.wikipedia.org/wiki/Marshalling_(computer_science)</a>
     * @param byteBuffer ByteBuffer for input
     * @throws Exception unmarshalling input-output error
     * @return enumeration of interest */
    public static EmitterSystemFunction unmarshalEnum(ByteBuffer byteBuffer) throws Exception
    {
        /*
        try {
            value = (int)byteBuffer.get();
        }
        catch(Exception ex) {
            showError(ex);
        }
        */
        return getEnumForValue(byteBuffer.get());
    }

  /**
   * Returns size of this serialized (marshalled) object in bytes
   * @see <a href="https://en.wikipedia.org/wiki/Marshalling_(computer_science)" target="_blank">https://en.wikipedia.org/wiki/Marshalling_(computer_science)</a>
   * @return serialized size in bytes
   */
    public int getMarshalledSize()
    {
        return 1; // 8 bits
    }
  /**
   * Provide name
   * @return  name
   */
    public String getName()
    {
        return name();
    }

    
  /**
   * Provide simple identifier
   * @return class name, value and name
   */
    @Override
    public String toString()
    {
        String padding = new String();
        if (this.getClass().getName().endsWith("DisPduType") && (getValue() < 10))
            padding = "0"; // leading zero for column spacing
        String result = this.getClass().getSimpleName() + " " + padding + getValue() + " " + name();
        if (getTRACE())
            System.out.println ("*** enum " + this.getClass().getSimpleName() + " name=" + name() + ", value=" + getValue() + "; " +
               result); // debug diagnostic
        return result;
    }
}
