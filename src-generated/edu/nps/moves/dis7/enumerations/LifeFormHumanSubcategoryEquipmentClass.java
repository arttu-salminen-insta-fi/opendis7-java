// autogenerated using string template disenumpart1.txt

package edu.nps.moves.dis7.enumerations;

import java.nio.ByteBuffer;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;

import edu.nps.moves.dis7.pdus.*;

/**
 * This <code>enum</code> type is generated from XML,
 *  UID 473,
 * marshal size 8;
 * LifeFormHumanSubcategoryEquipmentClass has 29 enumerations total.
 * @see <a href="https://docs.oracle.com/javase/tutorial/java/javaOO/enum.html">Java Tutorials: Enum Types</a>
 * @see java.lang.Enum
 */
public enum LifeFormHumanSubcategoryEquipmentClass 
{
    // autogenerated using string template disenumfootnotecomment.txt

    /** None */
    // autogenerated using string template disenumpart2.txt
    NONE (0, "None"),
    // autogenerated using string template disdictenumcomment.txt

    /** LifeFormHumanSpecificWeaponNonspecific */    // autogenerated using string template disenumpart21.txt
    WEAPON_NON_SPECIFIC_2 (1, "Weapon, Non-specific"),
    // autogenerated using string template disdictenumcomment.txt

    /** LifeFormHumanSpecificAssaultRifles */    // autogenerated using string template disenumpart21.txt
    ASSAULT_RIFLES_2 (5, "Assault Rifles"),
    // autogenerated using string template disdictenumcomment.txt

    /** LifeFormHumanSpecificHighPowerRifles */    // autogenerated using string template disenumpart21.txt
    HIGH_POWER_RIFLES_2 (10, "High Power Rifles"),
    // autogenerated using string template disdictenumcomment.txt

    /** LifeFormHumanSpecificSniper */    // autogenerated using string template disenumpart21.txt
    SNIPER_RIFLES_2 (15, "Sniper Rifles"),
    // autogenerated using string template disdictenumcomment.txt

    /** LifeFormHumanSpecificAntiMaterielRifles */    // autogenerated using string template disenumpart21.txt
    ANTI_MATERIEL_RIFLE_AMR_2 (17, "Anti-Materiel Rifle (AMR)"),
    // autogenerated using string template disdictenumcomment.txt

    /** LifeFormHumanSpecificSubMachineGun */    // autogenerated using string template disenumpart21.txt
    SUB_MACHINE_GUNS_2 (20, "Sub Machine Guns"),
    // autogenerated using string template disdictenumcomment.txt

    /** LifeFormHumanSpecificShotGuns */    // autogenerated using string template disenumpart21.txt
    SHOT_GUNS_2 (25, "Shot Guns"),
    // autogenerated using string template disdictenumcomment.txt

    /** LifeFormHumanSpecificGrenadeLaunchers */    // autogenerated using string template disenumpart21.txt
    GRENADE_LAUNCHERS (30, "Grenade Launchers"),
    // autogenerated using string template disdictenumcomment.txt

    /** LifeFormHumanSpecificMachineGuns */    // autogenerated using string template disenumpart21.txt
    MACHINE_GUNS_2 (35, "Machine Guns"),
    // autogenerated using string template disdictenumcomment.txt

    /** LifeFormHumanSpecificGrenadeLaunchingMachineGun */    // autogenerated using string template disenumpart21.txt
    GRENADE_LAUNCHING_MACHINE_GUN_2 (40, "Grenade Launching Machine Gun"),
    // autogenerated using string template disdictenumcomment.txt

    /** LifeFormHumanSpecificAntiTankRockets */    // autogenerated using string template disenumpart21.txt
    ANTI_TANK_ROCKETS_2 (45, "Anti-Tank Rockets"),
    // autogenerated using string template disdictenumcomment.txt

    /** LifeFormHumanSpecificAntiTankMissiles */    // autogenerated using string template disenumpart21.txt
    ANTI_TANK_MISSILES (50, "Anti-Tank Missiles"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Anti-Tank Guns */
    // autogenerated using string template disenumpart2.txt
    ACKNOWLEDGE_RELIABLE (55, "Anti-Tank Guns"),
    // autogenerated using string template disdictenumcomment.txt

    /** LifeFormHumanSpecificFlameRockets */    // autogenerated using string template disenumpart21.txt
    FLAME_ROCKETS (60, "Flame Rockets"),
    // autogenerated using string template disdictenumcomment.txt

    /** LifeFormHumanSpecificFlameThrowers */    // autogenerated using string template disenumpart21.txt
    FLAME_THROWERS (65, "Flame Throwers"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Rocket Launchers */
    // autogenerated using string template disenumpart2.txt
    ROCKET_LAUNCHERS (70, "Rocket Launchers"),
    // autogenerated using string template disdictenumcomment.txt

    /** LifeFormHumanSpecificMortars */    // autogenerated using string template disenumpart21.txt
    MORTARS_2 (75, "Mortars"),
    // autogenerated using string template disdictenumcomment.txt

    /** LifeFormHumanSpecificHandGuns */    // autogenerated using string template disenumpart21.txt
    HAND_GUNS_2 (80, "Hand Guns"),
    // autogenerated using string template disdictenumcomment.txt

    /** LifeFormHumanSpecificManPortableAirDefenseSystem */    // autogenerated using string template disenumpart21.txt
    MAN_PORTABLE_AIR_DEFENSE_SYSTEM_MANPADS_2 (85, "Man-Portable Air Defense System (MANPADS)"),
    // autogenerated using string template disdictenumcomment.txt

    /** LifeFormHumanSpecificRecoillessRifles */    // autogenerated using string template disenumpart21.txt
    RECOILLESS_RIFLES_2 (90, "Recoilless Rifles"),
    // autogenerated using string template disdictenumcomment.txt

    /** LifeFormHumanSpecificDroneGuns */    // autogenerated using string template disenumpart21.txt
    DRONE_GUNS_2 (95, "Drone Guns"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Equipment, Non-specific, Subcategories 150-199 are restricted to non-weapon equipment classes. */
    // autogenerated using string template disenumpart2.txt
    EQUIPMENT_NON_SPECIFIC (150, "Equipment, Non-specific"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Sensors, Subcategories 151-159 are restricted to sensor equipment classes. */
    // autogenerated using string template disenumpart2.txt
    SENSORS (151, "Sensors"),
    // autogenerated using string template disdictenumcomment.txt

    /** LifeFormHumanSpecificEquipmentClass */    // autogenerated using string template disenumpart21.txt
    SIGNAL_SENSOR_2 (152, "Signal Sensor"),
    // autogenerated using string template disdictenumcomment.txt

    /** LifeFormHumanSpecificLasersClass */    // autogenerated using string template disenumpart21.txt
    LASERS_2 (153, "Lasers"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** Animal Companion, Subcategories 160-169 are restricted to animal companion classes. */
    // autogenerated using string template disenumpart2.txt
    ANIMAL_COMPANION (160, "Animal Companion"),
    // autogenerated using string template disdictenumcomment.txt

    /** LifeFormHumanSpecificPersonalElectronicsClass */    // autogenerated using string template disenumpart21.txt
    PERSONAL_ELECTRONICS_2 (171, "Personal Electronics"),
    // autogenerated using string template disdictenumcomment.txt

    /** LifeFormHumanSpecificLogisticsEQClass */    // autogenerated using string template disenumpart21.txt
    LOGISTICS_EQUIPMENT_2 (172, "Logistics Equipment");

    // autogenerated using string template disenumpart25.txt

    private int value;
    private final String description;

    /** Constructor */
    LifeFormHumanSubcategoryEquipmentClass(int value, String description)
    {
        this.value = value;
        this.description = description;
    }
    /** Provide enumeration value
      * @return integer value */
    public int getValue()
    {
        return value;
    }

    /** Provide enumeration description
     * @return description
     */
    public String getDescription()
    {
        return description;
    }

    /** bit width for this enumeration
     * @return number of bits wide
     */
    public static int getEnumBitWidth()
    {
      return 8;
    }

    /** 
     * Provide enumeration for a given value
     * @param value integer value of interest
     * @return enumeration corresponding to numeric value
     */
    public static LifeFormHumanSubcategoryEquipmentClass getEnumForValue(int value)
    {
       for (LifeFormHumanSubcategoryEquipmentClass nextEnum : LifeFormHumanSubcategoryEquipmentClass.values())
       {
          if (nextEnum.getValue() == value)
              return nextEnum;
       }
       System.out.flush(); // ensure contiguous console outputs
       System.err.println("No corresponding enumeration found for value " + value + " of enum LifeFormHumanSubcategoryEquipmentClass");
       System.err.flush(); // ensure contiguous console outputs
       return null;
    }

    // autogenerated using string template disenumpart3_8.txt

    private boolean TRACE = false;

    /** Set tracing on/off for this object 
     * @param value whether tracing is on or off */
    public void setTRACE (boolean value)
    {
        TRACE = value;
    }

    /** Whether tracing is on or off for this object
     * @return whether tracing is on or off */
    public boolean getTRACE ()
    {
        return TRACE;
    }

    /** Marshal value to DataOutputStream
     * @see <a href="https://en.wikipedia.org/wiki/Marshalling_(computer_science)" target="_blank">https://en.wikipedia.org/wiki/Marshalling_(computer_science)</a>
     * @param dos DataOutputStream for output
     * @throws IOException input-output error */
    public void marshal(DataOutputStream dos) throws IOException
    {
        dos.writeByte(getValue());
    }
    
    /** Marshal value to ByteBuffer
     * @see <a href="https://en.wikipedia.org/wiki/Marshalling_(computer_science)" target="_blank">https://en.wikipedia.org/wiki/Marshalling_(computer_science)</a>
     * @param byteBuffer ByteBuffer for output
     * @throws IOException input-output error */
    public void marshal(ByteBuffer byteBuffer) throws Exception
    {
        byteBuffer.put((byte)getValue());
    }

    /** Unmarshal value to DataInputStream
     * @see <a href="https://en.wikipedia.org/wiki/Marshalling_(computer_science)" target="_blank">https://en.wikipedia.org/wiki/Marshalling_(computer_science)</a>
     * @param dis DataInputStream for input
     * @throws Exception unmarshalling input-output error
     * @return enumeration of interest */
    public static LifeFormHumanSubcategoryEquipmentClass unmarshalEnum (DataInputStream dis) throws Exception
    {
       /* try {
            value = dis.readUnsignedByte();
        }
        catch(IOException ex) {
            showError(ex);
        } */
        
        return getEnumForValue(dis.readByte());
    } 

    /** Unmarshal enumeration value to ByteBuffer
     * @see <a href="https://en.wikipedia.org/wiki/Marshalling_(computer_science)" target="_blank">https://en.wikipedia.org/wiki/Marshalling_(computer_science)</a>
     * @param byteBuffer ByteBuffer for input
     * @throws Exception unmarshalling input-output error
     * @return enumeration of interest */
    public static LifeFormHumanSubcategoryEquipmentClass unmarshalEnum(ByteBuffer byteBuffer) throws Exception
    {
        /*
        try {
            value = (int)byteBuffer.get();
        }
        catch(Exception ex) {
            showError(ex);
        }
        */
        return getEnumForValue(byteBuffer.get());
    }

  /**
   * Returns size of this serialized (marshalled) object in bytes
   * @see <a href="https://en.wikipedia.org/wiki/Marshalling_(computer_science)" target="_blank">https://en.wikipedia.org/wiki/Marshalling_(computer_science)</a>
   * @return serialized size in bytes
   */
    public int getMarshalledSize()
    {
        return 1; // 8 bits
    }
    
  /**
   * Provide simple identifier
   * @return ID number and name
   */
    @Override
    public String toString()
    {
        String padding = new String();
        if (this.getClass().getName().endsWith("DisPduType") && (getValue() < 10))
            padding = "0"; // leading zero for column spacing
        String result = "DisPduType " + padding + getValue() + " " + name();
        if (getTRACE())
            System.out.println ("*** enum " + this.getClass().getName() + " name=" + name() + ", value=" + getValue() + "; " +
               result); // debug diagnostic
        return result;
    }
}
