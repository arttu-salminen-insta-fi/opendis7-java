/**
 * Copyright (c) 2008-2023, MOVES Institute, Naval Postgraduate School (NPS). All rights reserved.
 * This work is provided under a BSD-style open-source license, see project
 * <a href="https://savage.nps.edu/opendis7-java/license.html" target="_blank">license.html</a> and <a href="https://savage.nps.edu/opendis7-java/license.txt" target="_blank">license.txt</a>
 */
// header autogenerated using string template dis7javalicense.txt

// autogenerated using string template disenumpart1.txt

package edu.nps.moves.dis7.enumerations;

import java.nio.ByteBuffer;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;

import edu.nps.moves.dis7.pdus.*;

/**
 * This <code>enum</code> type is generated from XML,
 *  UID 57,
 * marshal size 32;
 * AttachedParts has 11 enumerations total.
 * @see <a href="https://docs.oracle.com/javase/tutorial/java/javaOO/enum.html">Java Tutorials: Enum Types</a>
 * @see java.lang.Enum
 */
public enum AttachedParts 
{
    // autogenerated using string template disenumfootnotecomment.txt

    /** Nothing, Empty */
    // autogenerated using string template disenumpart2.txt
    NOTHING_EMPTY (0, "Nothing, Empty"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** M16A42 rifle */
    // autogenerated using string template disenumpart2.txt
    M16A42_RIFLE (896, "M16A42 rifle"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** M249 SAW */
    // autogenerated using string template disenumpart2.txt
    M249_SAW (897, "M249 SAW"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** M60 Machine gun */
    // autogenerated using string template disenumpart2.txt
    M60_MACHINE_GUN (898, "M60 Machine gun"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** M203 Grenade Launcher */
    // autogenerated using string template disenumpart2.txt
    M203_GRENADE_LAUNCHER (899, "M203 Grenade Launcher"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** M136 AT4 */
    // autogenerated using string template disenumpart2.txt
    M136_AT4 (900, "M136 AT4"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** M47 Dragon */
    // autogenerated using string template disenumpart2.txt
    M47_DRAGON (901, "M47 Dragon"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** AAWS-M Javelin */
    // autogenerated using string template disenumpart2.txt
    AAWS_M_JAVELIN (902, "AAWS-M Javelin"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** M18A1 Claymore Mine */
    // autogenerated using string template disenumpart2.txt
    M18A1_CLAYMORE_MINE (903, "M18A1 Claymore Mine"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** MK19 Grenade Launcher */
    // autogenerated using string template disenumpart2.txt
    MK19_GRENADE_LAUNCHER (904, "MK19 Grenade Launcher"),
    // autogenerated using string template disenumfootnotecomment.txt

    /** M2 Machine Gun */
    // autogenerated using string template disenumpart2.txt
    M2_MACHINE_GUN (905, "M2 Machine Gun");

    // autogenerated using string template disenumpart25.txt

    private int value;
    private final String description;

    /** Constructor */
    AttachedParts(int value, String description)
    {
        this.value = value;
        this.description = description;
    }
    /** Provide enumeration value
      * @return integer value */
    public int getValue()
    {
        return value;
    }

    /** Provide enumeration description
     * @return description
     */
    public String getDescription()
    {
        return description;
    }

    /** bit width for this enumeration
     * @return number of bits wide
     */
    public static int getEnumBitWidth()
    {
      return 32;
    }

    /** 
     * Provide enumeration for a given value
     * @param value integer value of interest
     * @return enumeration corresponding to numeric value
     */
    public static AttachedParts getEnumForValue(int value)
    {
       for (AttachedParts nextEnum : AttachedParts.values())
       {
          if (nextEnum.getValue() == value)
              return nextEnum;
       }
       System.out.flush(); // ensure contiguous console outputs
       System.err.println("No corresponding enumeration found for value " + value + " of enum AttachedParts");
       System.err.flush(); // ensure contiguous console outputs
       return null;
    }

    // autogenerated using string template disenumpart3_32.txt

    /** Marshal value to DataOutputStream
     * @see <a href="https://en.wikipedia.org/wiki/Marshalling_(computer_science)" target="_blank">https://en.wikipedia.org/wiki/Marshalling_(computer_science)</a>
     * @param dos DataOutputStream for output
     * @throws IOException input-output error */
    public void marshal(DataOutputStream dos) throws IOException
    {
        dos.writeInt(getValue());
    }

    /** Marshal value to ByteBuffer
     * @see <a href="https://en.wikipedia.org/wiki/Marshalling_(computer_science)" target="_blank">https://en.wikipedia.org/wiki/Marshalling_(computer_science)</a>
     * @param byteBuffer ByteBuffer for output */
    public void marshal(ByteBuffer byteBuffer)
    {
        byteBuffer.putInt(getValue());
    }

    /** Unmarshal value to DataInputStream
     * @see <a href="https://en.wikipedia.org/wiki/Marshalling_(computer_science)" target="_blank">https://en.wikipedia.org/wiki/Marshalling_(computer_science)</a>
     * @param dis DataInputStream for input
     * @throws Exception unmarshalling input-output error
     * @return enumeration of interest */
    public static AttachedParts unmarshalEnum (DataInputStream dis) throws Exception
    {
        return getEnumForValue(dis.readInt());
    } 

    /** Unmarshal enumeration value to ByteBuffer
     * @see <a href="https://en.wikipedia.org/wiki/Marshalling_(computer_science)" target="_blank">https://en.wikipedia.org/wiki/Marshalling_(computer_science)</a>
     * @param byteBuffer ByteBuffer for input
     * @return enumeration of interest */
    public static AttachedParts unmarshalEnum (ByteBuffer byteBuffer)
    {
        return getEnumForValue(byteBuffer.getInt());
    }

  /**
   * Returns size of this serialized (marshalled) object in bytes
   * @see <a href="https://en.wikipedia.org/wiki/Marshalling_(computer_science)" target="_blank">https://en.wikipedia.org/wiki/Marshalling_(computer_science)</a>
   * @return serialized size in bytes
   */
    public int getMarshalledSize()
    {
        return 4; // 32 bits
    }
    
    @Override
    public String toString()
    {
        return "AttachedParts: " + getValue() + " " + name();
    }
}
